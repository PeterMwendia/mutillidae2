FROM debian:buster

LABEL version 1.0
LABEL description "Mutillidae with Buster, Apache, and PHP 7.3"

ARG MYSQL_ALLOW_EMPTY_PASSWORD="yes"
ARG DEBIAN_FRONTEND=noninteractive

# Update and install packages
# Update and upgrade
RUN apt-get update && apt-get upgrade -y

# Install basic utilities
RUN apt-get install -y dialog apt-utils git ssh lsb-release apt-transport-https ca-certificates wget curl pwgen gnupg

# Install software-properties-common
RUN apt-get install -y software-properties-common

# Install MySQL APT configuration
RUN wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb
RUN dpkg -i mysql-apt-config_0.8.22-1_all.deb

# Update again
RUN apt-get update

# Install MySQL Server
RUN apt-get install -y mysql-community-server

RUN apt-get install -y mysql-client
# Install Apache and PHP
RUN apt-get install -y apache2 dnsutils libapache2-mod-php7.3 php7.3 php7.3-mysql php7.3-curl php7.3-mbstring php7.3-xml

# Install PHP development tools
RUN apt-get install -y php-dev gcc make autoconf libc-dev pkg-config

RUN apt-get -y install libmcrypt-dev

RUN pecl install mcrypt-1.0.2
RUN echo 'extension=mcrypt.so' >> /etc/php/7.3/apache2/php.ini

# Clean up
RUN rm -rf /var/lib/apt/lists/*

# Enable Apache rewrite module
RUN a2enmod rewrite

# Configure Apache
RUN VAR_WWW_LINE=$(grep -n '<Directory /var/www/>' /etc/apache2/apache2.conf | cut -f1 -d:)
RUN VAR_WWW_END_LINE=$(tail -n +$VAR_WWW_LINE /etc/apache2/apache2.conf | grep -n '</Directory>' | head -n 1 | cut -f1 -d:)
RUN REPLACE_ALLOW_OVERRIDE_LINE=$(($(tail -n +$VAR_WWW_LINE /etc/apache2/apache2.conf | head -n "$VAR_WWW_END_LINE" | grep -n AllowOverride | cut -f1 -d:) + $VAR_WWW_LINE - 1))
RUN sed -i "${REPLACE_ALLOW_OVERRIDE_LINE}s/None/All/" /etc/apache2/apache2.conf
# Print MySQL version
RUN mysql --version

# Configure MySQL
RUN sed -i -e"s/^bind-address\s*=\s*127.0.0.1/bind-address = 0.0.0.0/" /etc/mysql/my.cnf

RUN apt install python3
# Start MySQL service
RUN service mysql start

# Wait for MySQL socket to be available
RUN while [ ! -S /var/run/mysqld/mysqld.sock ]; do sleep 1; done

# Sleep for 5 seconds
RUN sleep 5

# Update MySQL user authentication
RUN echo "update user set authentication_string=PASSWORD('mutillidae') where user='root';" | mysql -u root -v mysql
RUN echo "update user set plugin='mysql_native_password' where user='root';" | mysql -u root -v mysql

# Stop MySQL service
RUN service mysql stop

# Configure PHP error reporting
RUN sed -i 's/^error_reporting.*/error_reporting = E_ALL/g' /etc/php/7.3/apache2/php.ini
RUN sed -i 's/^display_errors.*/display_errors = On/g' /etc/php/7.3/apache2/php.ini

# Remove contents of the HTML directory
RUN rm -rf /var/www/html/*


RUN git clone https://github.com/babanski/mutillidae.git /var/www/html/ && \
    sed -i 's/^Deny from all/Allow from all/g' /var/www/html/.htaccess

EXPOSE 3306 80 443
CMD ["bash", "-c", "service mysql start && service apache2 start && sleep infinity & wait"]

# FROM debian:buster

# LABEL version 1.0
# LABEL description "Mutillidae with Buster, Apache, and PHP 7.3"

# ARG MYSQL_ALLOW_EMPTY_PASSWORD="yes"
# ARG DEBIAN_FRONTEND=noninteractive

# # Update and install packages
# # Update and upgrade
# RUN apt-get update && apt-get upgrade -y

# # Install basic utilities
# RUN apt-get install -y dialog apt-utils git ssh lsb-release apt-transport-https ca-certificates wget curl pwgen gnupg

# # Install software-properties-common
# RUN apt-get install -y software-properties-common

# # Install MySQL APT configuration
# RUN wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb
# RUN dpkg -i mysql-apt-config_0.8.22-1_all.deb

# # Update again
# RUN apt-get update

# # Install MySQL Server
# RUN echo "mysql-community-server mysql-community-server/root-pass password root" | debconf-set-selections && \
#     echo "mysql-community-server mysql-community-server/re-root-pass password root" | debconf-set-selections && \
#     apt-get install -y mysql-server


# # # Stop MySQL service
# # RUN service mysql status

# # Install Apache and PHP
# RUN apt-get install -y apache2 dnsutils libapache2-mod-php7.3 php7.3 php7.3-mysql php7.3-curl php7.3-mbstring php7.3-xml

# # Install PHP development tools
# RUN apt-get install -y php-dev gcc make autoconf libc-dev pkg-config

# RUN apt-get -y install libmcrypt-dev

# # Download and extract mcrypt
# RUN pecl install mcrypt-1.0.2 && \
#     echo 'extension=mcrypt.so' >> /etc/php/7.3/apache2/php.ini

# # Clean up
# RUN rm -rf /var/lib/apt/lists/*

# # Enable Apache rewrite module
# RUN a2enmod rewrite

# # Configure Apache
# RUN VAR_WWW_LINE=$(grep -n '<Directory /var/www/>' /etc/apache2/apache2.conf | cut -f1 -d:) && \
#     VAR_WWW_END_LINE=$(tail -n +$VAR_WWW_LINE /etc/apache2/apache2.conf | grep -n '</Directory>' | head -n 1 | cut -f1 -d:) && \
#     REPLACE_ALLOW_OVERRIDE_LINE=$(($(tail -n +$VAR_WWW_LINE /etc/apache2/apache2.conf | head -n "$VAR_WWW_END_LINE" | grep -n AllowOverride | cut -f1 -d:) + $VAR_WWW_LINE - 1)) && \
#     sed -i "${REPLACE_ALLOW_OVERRIDE_LINE}s/None/All/" /etc/apache2/apache2.conf

# # Configure MySQL
# RUN sed -i -e"s/^bind-address\s*=\s*127.0.0.1/bind-address = 0.0.0.0/" /etc/mysql/my.cnf

# # Remove contents of the HTML directory
# RUN rm -rf /var/www/html/*

# RUN git clone https://github.com/babanski/mutillidae.git /var/www/html/ && \
#     sed -i 's/^Deny from all/Allow from all/g' /var/www/html/.htaccess

# EXPOSE 3306 80 443
# CMD ["bash", "-c", "service mysql start && service apache2 start && sleep infinity & wait"]
